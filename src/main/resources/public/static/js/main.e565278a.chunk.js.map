{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e565278a.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({ teamName, match }) => {\r\n\r\n  if (!match) return null;\r\n\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1},{match.umpire2}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport {Link} from 'react-router-dom'; \r\n\r\nimport './MatchSmallCard';\r\n\r\nexport const MatchSmallCard = ({match,teamName}) => {\r\n\r\n    if(!match) return null;\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n      <span className=\"vs\">vs</span>\r\n      <h1>vs <Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n      <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team, setTeam] = useState({ matches: [] });\r\n  const { teamName } = useParams();\r\n\r\n  useEffect(\r\n    () => {\r\n\r\n      const fetchMatches = async () => {\r\n\r\n        const response = await fetch(`http://localhost:8080/team/${teamName}`);\r\n        const data = await response.json();\r\n        setTeam(data);\r\n\r\n      };\r\n\r\n      fetchMatches();\r\n    }, [teamName]);\r\n\r\n  if (!team || !team.teamName) {\r\n    return <h1>Team not found</h1>\r\n  }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\" >\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n      <div className=\"win-loss-section\">\r\n        Wins / Losses\r\n        <PieChart\r\n          data={[\r\n            { title: 'Losses',value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n            { title: 'Wins',value: team.totalWins, color: '#4da375' }\r\n            \r\n          ]}\r\n        />\r\n\r\n\r\n      </div>\r\n      <div className=\"match-detail-section\">\r\n        <h3>Latest Matches</h3>\r\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n      </div>\r\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n      <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/2020`}>More></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n\r\n    let years = [];\r\n    const startYear = 2008 \r\n    //process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = 2020;\r\n    //process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n\r\n        <ol className=\"YearSelector\">\r\n        {\r\n            years.map(year => (\r\n                <li key={year}>\r\n                    <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li>\r\n            ))\r\n        }\r\n        </ol>\r\n    )\r\n\r\n}","import { React,useEffect,useState } from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches,setMatches] = useState([]);\r\n    const {teamName,year} = useParams();\r\n\r\n    //const teamName = 'Delhi Capitals';\r\n    useEffect(\r\n        () => {\r\n        \r\n        const fetchMatches = async () => {\r\n          \r\n          const response = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\r\n          const data = await response.json();\r\n          setMatches(data);\r\n    \r\n        };\r\n    \r\n        fetchMatches();\r\n      },[teamName,year]);\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n        <div className=\"year-selector\">\r\n          <h3>Select Year</h3>\r\n          <YearSelector teamName={teamName}/>\r\n        </div>\r\n        <div>\r\n        <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n        {matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n\r\n  return (\r\n    <div className=\"TeamTile\">\r\n      <h1>\r\n      <Link to={`/teams/${teamName}`}>{teamName}</Link>\r\n            \r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            const fetchAllTeams = async () => {\r\n\r\n                const response = await fetch(`http://localhost:8080/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n            };\r\n\r\n            fetchAllTeams();\r\n        }, []);\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\" >\r\n                <h1 className=\"app-name\">IPL Dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n            {teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import './App.scss';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Switch>\n\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n\n          <Route path=\"/\">\n          <HomePage />            \n          </Route>\n          \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}